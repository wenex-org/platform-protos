syntax = "proto3";

package apps;

service CoreService {
  rpc Count(Filter) returns (Total);
  rpc Create(App) returns (App);

  rpc FindOne(Filter) returns (App);
  rpc FindMany(Filter) returns (Apps);

  rpc FindById(Filter) returns (App);

  rpc DeleteById(Filter) returns (App);
  rpc RestoreById(Filter) returns (App);
  rpc DestroyById(Filter) returns (App);

  rpc UpdateById(UpdateApp) returns (App);
  rpc UpdateBulk(UpdateApp) returns (Total);
}

message Total { int64 count = 1; }

message Filter {
  optional string query = 1;
  optional string projection = 2;
  optional string pagination = 3;
}

message App {
  // Base Schema
  optional string id = 1;

  string owner = 2;
  repeated string shares = 3;
  repeated string zones = 4;
  repeated string clients = 5;

  optional string created_at = 6;
  optional string created_by = 7;
  optional string created_in = 8;
  optional string updated_at = 9;
  optional string updated_by = 10;
  optional string updated_in = 11;
  optional string deleted_at = 12;
  optional string deleted_by = 13;
  optional string deleted_in = 14;
  optional string restored_at = 15;
  optional string restored_by = 16;
  optional string restored_in = 17;

  optional string version = 18;
  repeated string tags = 19;

  // App Specific Schema
  string client_id = 50;
  string client_type = 51;

  repeated string scopes = 52;
  repeated string grant_types = 53;
  optional string app_version = 54;

  int64 access_token_ttl = 55;
  int64 refresh_token_ttl = 56;

  repeated AppLink app_links = 57;
  repeated ChangeLog change_logs = 58;

}

message ChangeLog {
  string version = 1;
  optional string code = 2;
  repeated string changes = 3;
  optional string description = 4;
  optional string deprecated_at = 5;
}

message AppLink {
  string type = 1;
  string link = 2;
}

message Apps { repeated App items = 1; }

message UpdateApp {
  App update = 1;
  Filter filter = 2;
}
